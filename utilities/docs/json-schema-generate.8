.\" Manpage for json-schema-generate.
.\" Documentation is under the same licence as the Walbottle package.
.TH man 8 "29 Sep 2015" "1.0" "json-schema-generate man page"

.SH NAME
.IX Header "NAME"
json-schema-generate — JSON instance generator

.SH SYNOPSIS
.IX Header "SYNOPSIS"
\fBjson-schema-generate \fPschema-file\fB [\fPschema-file\fB …] [-q] [-v] [-n]
[-j] [-f \fPformat-name\fB] [--c-variable-name \fPvariable_name\fB]

.SH DESCRIPTION
.IX Header "DESCRIPTION"
\fBjson-schema-generate\fP is a utility for generating JSON instances which may
or may not be valid for a given JSON schema. Both valid and invalid instances
are designed to test corner cases of the parser which implements the given JSON
schema.

See the documentation for libwalbottle for instructions on how to integrate
json-schema-generate into a typical test suite build process.

Valid instances (well-formed JSON which validates against the schema),
invalid instances (well-formed JSON which does not validate against the schema)
and invalid JSON (non-well-formed JSON) are generated by this utility by
default. This can be controlled using the \fB--valid-only\fP,
\fB--invalid-only\fP and \fB--no-invalid-json\fP options.

Instances are printed on standard output. By default, one JSON instance is
outputted per line. A C array of escaped JSON strings may be outputted instead
by choosing \fB--format=c\fP. This will be in the format below — the
\fB--c-variable-name\fP option may be used to change the variable name from its
default:

.RS
/* Generated by json-schema-generate. Do not modify. */

#include <stddef.h>

static const struct { const char *json; size_t size; unsigned int is_valid; } json_instances[] = {
.br
	{ "\\"some JSON instances\\"", 21, 0 },  /* 0 */
.br
	…
.br
};
.RE

The output formats are guaranteed to not change without a change in Walbottle’s
major version number. This includes the C structure and types.

For information on JSON Schema, see \fIhttp://json-schema.org/\fP.

.SH OPTIONS
.IX Header "OPTIONS"
.IP "\fB\-q \-\-quiet\fP"
Do not print progress output during generation.
.IP "\fB\-v \-\-valid\-only\fP"
Only output valid instances (well-formed JSON which validates against the
schema).
.IP "\fB\-n \-\-invalid\-only\fP"
Only output invalid instances (well-formed JSON which does not validate against
the schema).
.IP "\fB\-j \-\-no\-invalid\-json\fP"
Do not output invalid JSON (non-well-formed JSON).
.IP "\fB\-f \-\-format\fP [plain|c]"
Output in plain format (one JSON instance per line) or C format (all JSON
instances escaped as strings in an array).
.IP "\fB\-\-c\-variable\-name\fP variable_name"
Set the name of the JSON instance array output if using \-\-format=c. This
option must only be used with C-format output.

.SH "ENVIRONMENT"
.IX Header "ENVIRONMENT"
json-schema-generate supports the standard GLib environment variables for
debugging. These variables are \fBnot\fP intended to be used in production:
.IP \fBG_MESSAGES_DEBUG\fR 4
.IX Item "G_MESSAGES_DEBUG"
This variable can contain one or more debug domain names to display debug output
for. The value \fIall\fP will enable all debug output. The default is for no
debug output to be enabled.

.SH "EXIT STATUS"
.IX Header "EXIT STATUS"
json-schema-generate may return one of several error codes if it encounters
problems.

.IP "0" 4
No problems occurred. Instances were generated successfully for the given
schemas.
.IP "1" 4
.IX Item "1"
An invalid option was passed to json-schema-generate on startup.
.IP "2" 4
.IX Item "2"
One of the JSON schemas was not well-formed or did not validate against the
meta-schema.

.SH EXAMPLES
.IX Header "EXAMPLES"
Here is an example of generating JSON instances for a given schema, in C format:
.br
.PP
\fBjson-schema-generate\fP --format=c --c-variable-name=my_schema_json_instances
/path/to/my-schema.schema.json

.SH "SEE ALSO"
.IX Header "SEE ALSO"
.I json-validate(8)
.I json-schema-validate(8)

.SH BUGS
.IX Header "BUGS"
Any bugs which are found should be reported on the project website:
.br
.I https://gitlab.com/walbottle/walbottle

.SH AUTHOR
.IX Header "AUTHOR"
Collabora Ltd.

.SH COPYRIGHT
.IX Header "COPYRIGHT"
Copyright © 2015 Collabora Ltd.
.PP
